#include "i8080.h"


using namespace xprocessors::cpu;


const std::vector<i8080::opcode_steps> i8080::opcodes_timing[] =
{
	// 0x00 - 0x0F
	{ NOP, FETCH}, // NOP
	{ NOP, READPC, WAIT, LD_DB_INTO_C, READPC, WAIT, LD_DB_INTO_B, FETCH }, // LXI B,d
	{ LD_BC_INTO_WZ, WRITE, LD_A_INTO_DB, STOPWRITE, FETCH }, // STAX B
	{ NOP, INC_BC, FETCH }, // INX B
	{ NOP, INC_B, FETCH }, // INR B
	{ NOP, DEC_B, FETCH }, // DCR B
	{ NOP, READPC, WAIT, LD_DB_INTO_B, FETCH }, // MVI B,d
	{ RLC, FETCH }, // RLC
	{ NOP, FETCH}, // NOP
	{ LD_BC_INTO_WZ, NOP, NOP, NOP, NOP, NOP, ADD_WZ_TO_HL, FETCH }, // DAD B
	{ LD_BC_INTO_WZ, READ, WAIT, LD_DB_INTO_A, FETCH }, // LDAX B
	{ NOP, DEC_BC, FETCH }, // DCX B
	{ NOP, INC_C, FETCH }, // INR C
	{ NOP, DEC_C, FETCH }, // DCR C
	{ NOP, READPC, WAIT, LD_DB_INTO_C, FETCH }, // MVI C,d
	{ RRC, FETCH }, // RRC

	// 0x10 - 0x1F
	{ NOP, FETCH}, // NOP
	{ NOP, READPC, WAIT, LD_DB_INTO_E, READPC, WAIT, LD_DB_INTO_D, FETCH }, // LXI D,d
	{ LD_DE_INTO_WZ, WRITE, LD_A_INTO_DB, STOPWRITE, FETCH }, // STAX D
	{ NOP, INC_DE, FETCH }, // INX D
	{ NOP, INC_D, FETCH }, // INR D
	{ NOP, DEC_D, FETCH }, // DCR D
	{ NOP, READPC, WAIT, LD_DB_INTO_D, FETCH }, // MVI D,d
	{ RAL, FETCH }, // RAL
	{ NOP, FETCH}, // NOP
	{ LD_DE_INTO_WZ, NOP, NOP, NOP, NOP, NOP, ADD_WZ_TO_HL, FETCH }, // DAD D
	{ LD_DE_INTO_WZ, READ, WAIT, LD_DB_INTO_A, FETCH }, // LDAX D
	{ NOP, DEC_DE, FETCH }, // DCX D
	{ NOP, INC_E, FETCH }, // INR E
	{ NOP, DEC_E, FETCH }, // DCR E
	{ NOP, READPC, WAIT, LD_DB_INTO_E, FETCH }, // MVI E,d
	{ RAR, FETCH }, // RAR

	// 0x20 - 0x2F
	{ NOP, FETCH}, // NOP
	{ NOP, READPC, WAIT, LD_DB_INTO_L, READPC, WAIT, LD_DB_INTO_H, FETCH }, // LXI H,d
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, WRITE, LD_L_INTO_DB, WRITEINC, WRITE, LD_H_INTO_DB, STOPWRITE, FETCH}, // SHLD a
	{ NOP, INC_HL, FETCH }, // INX H
	{ NOP, INC_H, FETCH }, // INR H
	{ NOP, DEC_H, FETCH }, // DCR H
	{ NOP, READPC, WAIT, LD_DB_INTO_H, FETCH }, // MVI H,d
	{ DAA, FETCH }, // DAA
	{ NOP, FETCH}, // NOP
	{ LD_HL_INTO_WZ, NOP, NOP, NOP, NOP, NOP, ADD_WZ_TO_HL, FETCH }, // DAD H
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, READ, WAIT, LD_DB_INTO_L, READINC, WAIT, LD_DB_INTO_H, FETCH }, // LHLD a
	{ NOP, DEC_HL, FETCH }, // DCX HL
	{ NOP, INC_L, FETCH }, // INR L
	{ NOP, DEC_L, FETCH }, // DCR L
	{ NOP, READPC, WAIT, LD_DB_INTO_L, FETCH }, // MVI L,d
	{ CMA, FETCH }, // CMA

	// 0x30 - 0x3F
	{ NOP, FETCH}, // NOP
	{ NOP, READPC, WAIT, LD_DB_INTO_SPL, READPC, WAIT, LD_DB_INTO_SPH, FETCH }, // LXI SP,d
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, WRITE, LD_A_INTO_DB, STOPWRITE, FETCH }, // STA a
	{ NOP, INC_SP, FETCH }, // INX SP
	{ LD_HL_INTO_WZ, READ, WAIT, INC_DB, WRITE, LD_SAV_INTO_DB, STOPWRITE, FETCH }, // INR M
	{ LD_HL_INTO_WZ, READ, WAIT, DEC_DB, WRITE, LD_SAV_INTO_DB, STOPWRITE, FETCH }, // DCR M
	{ LD_HL_INTO_WZ, READPC, WAIT, LD_DB_INTO_SAV, WRITE, LD_SAV_INTO_DB, STOPWRITE, FETCH }, // MVI M,d
	{ STC, FETCH }, // STC
	{ NOP, FETCH}, // NOP
	{ LD_SP_INTO_WZ, NOP, NOP, NOP, NOP, NOP, ADD_WZ_TO_HL, FETCH }, // DAD SP
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, READ, WAIT, LD_DB_INTO_A, FETCH }, // LDA a
	{ NOP, DEC_SP, FETCH }, // DCX SP
	{ NOP, INC_A, FETCH }, // INR A
	{ NOP, DEC_A, FETCH }, // DCR A
	{ NOP, READPC, WAIT, LD_DB_INTO_A, FETCH }, // MVI A,d
	{ CMC, FETCH }, // CMC

	// 0x40 - 0x4F
	{ NOP, NOP, FETCH }, // MOV B,B
	{ NOP, LD_C_INTO_B, FETCH }, // MOV B,C
	{ NOP, LD_D_INTO_B, FETCH }, // MOV B,D
	{ NOP, LD_E_INTO_B, FETCH }, // MOV B,E
	{ NOP, LD_H_INTO_B, FETCH }, // MOV B,H
	{ NOP, LD_L_INTO_B, FETCH }, // MOV B,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_B, FETCH }, // MOV B,M
	{ NOP, LD_A_INTO_B, FETCH }, // MOV B,A
	{ NOP, LD_B_INTO_C, FETCH }, // MOV C,B
	{ NOP, NOP, FETCH }, // MOV C,C
	{ NOP, LD_D_INTO_C, FETCH }, // MOV C,D
	{ NOP, LD_E_INTO_C, FETCH }, // MOV C,E
	{ NOP, LD_H_INTO_C, FETCH }, // MOV C,H
	{ NOP, LD_L_INTO_C, FETCH }, // MOV C,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_C, FETCH }, // MOV C,M
	{ NOP, LD_A_INTO_C, FETCH }, // MOV C,A

	// 0x50 - 0x5F
	{ NOP, LD_B_INTO_D, FETCH }, // MOV D,B
	{ NOP, LD_C_INTO_D, FETCH }, // MOV D,C
	{ NOP, NOP, FETCH }, // MOV D,D
	{ NOP, LD_E_INTO_D, FETCH }, // MOV D,E
	{ NOP, LD_H_INTO_D, FETCH }, // MOV D,H
	{ NOP, LD_L_INTO_D, FETCH }, // MOV D,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_D, FETCH }, // MOV D,M
	{ NOP, LD_A_INTO_D, FETCH }, // MOV D,A
	{ NOP, LD_B_INTO_E, FETCH }, // MOV E,B
	{ NOP, LD_C_INTO_E, FETCH }, // MOV E,C
	{ NOP, LD_D_INTO_E, FETCH }, // MOV E,D
	{ NOP, NOP, FETCH }, // MOV E,E
	{ NOP, LD_H_INTO_E, FETCH }, // MOV E,H
	{ NOP, LD_L_INTO_E, FETCH }, // MOV E,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_E, FETCH }, // MOV E,M
	{ NOP, LD_A_INTO_E, FETCH }, // MOV E,A

	// 0x60 - 0x6F
	{ NOP, LD_B_INTO_H, FETCH }, // MOV H,B
	{ NOP, LD_C_INTO_H, FETCH }, // MOV H,C
	{ NOP, LD_D_INTO_H, FETCH }, // MOV H,D
	{ NOP, LD_E_INTO_H, FETCH }, // MOV H,E
	{ NOP, NOP, FETCH }, // MOV H,H
	{ NOP, LD_L_INTO_H, FETCH }, // MOV H,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_H, FETCH }, // MOV H,M
	{ NOP, LD_A_INTO_H, FETCH }, // MOV H,A
	{ NOP, LD_B_INTO_L, FETCH }, // MOV L,B
	{ NOP, LD_C_INTO_L, FETCH }, // MOV L,C
	{ NOP, LD_D_INTO_L, FETCH }, // MOV L,D
	{ NOP, LD_E_INTO_L, FETCH }, // MOV L,E
	{ NOP, LD_H_INTO_L, FETCH }, // MOV L,H
	{ NOP, NOP, FETCH }, // MOV L,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_L, FETCH }, // MOV L,M
	{ NOP, LD_A_INTO_L, FETCH }, // MOV L,A

	// 0x70 - 0x7F
	{ LD_HL_INTO_WZ, WRITE, LD_B_INTO_DB, STOPWRITE, FETCH }, // MOV M,B
	{ LD_HL_INTO_WZ, WRITE, LD_C_INTO_DB, STOPWRITE, FETCH }, // MOV M,C
	{ LD_HL_INTO_WZ, WRITE, LD_D_INTO_DB, STOPWRITE, FETCH }, // MOV M,D
	{ LD_HL_INTO_WZ, WRITE, LD_E_INTO_DB, STOPWRITE, FETCH }, // MOV M,E
	{ LD_HL_INTO_WZ, WRITE, LD_H_INTO_DB, STOPWRITE, FETCH }, // MOV M,H
	{ LD_HL_INTO_WZ, WRITE, LD_L_INTO_DB, STOPWRITE, FETCH }, // MOV M,L
	{ NOP, HALT1, HALT2, NOP, FETCH }, // HALT
	{ LD_HL_INTO_WZ, WRITE, LD_A_INTO_DB, STOPWRITE, FETCH }, // MOV M,A
	{ NOP, LD_B_INTO_A, FETCH }, // MOV A,B
	{ NOP, LD_C_INTO_A, FETCH }, // MOV A,C
	{ NOP, LD_D_INTO_A, FETCH }, // MOV A,D
	{ NOP, LD_E_INTO_A, FETCH }, // MOV A,E
	{ NOP, LD_H_INTO_A, FETCH }, // MOV A,H
	{ NOP, LD_L_INTO_A, FETCH }, // MOV A,L
	{ LD_HL_INTO_WZ, READ, WAIT, LD_DB_INTO_A, FETCH }, // MOV A,M
	{ NOP, NOP, FETCH }, // MOV A,A

	// 0x80 - 0x8F
	{ ADD_B_TO_A, FETCH }, // ADD B
	{ ADD_C_TO_A, FETCH }, // ADD C
	{ ADD_D_TO_A, FETCH }, // ADD D
	{ ADD_E_TO_A, FETCH }, // ADD E
	{ ADD_H_TO_A, FETCH }, // ADD H
	{ ADD_L_TO_A, FETCH }, // ADD L
	{LD_HL_INTO_WZ, READ, WAIT, ADD_DB_TO_A, FETCH }, // ADD M
	{ ADD_A_TO_A, FETCH }, // ADD A
	{ ADC_B_TO_A, FETCH }, // ADC B
	{ ADC_C_TO_A, FETCH }, // ADC C
	{ ADC_D_TO_A, FETCH }, // ADC D
	{ ADC_E_TO_A, FETCH }, // ADC E
	{ ADC_H_TO_A, FETCH }, // ADC H
	{ ADC_L_TO_A, FETCH }, // ADC L
	{ LD_HL_INTO_WZ, READ, WAIT, ADC_DB_TO_A, FETCH }, // ADC M
	{ ADC_A_TO_A, FETCH }, // ADC A

	// 0x90 - 0x9F
	{ SUB_B_TO_A, FETCH }, // SUB B
	{ SUB_C_TO_A, FETCH }, // SUB C
	{ SUB_D_TO_A, FETCH }, // SUB D
	{ SUB_E_TO_A, FETCH }, // SUB E
	{ SUB_H_TO_A, FETCH }, // SUB H
	{ SUB_L_TO_A, FETCH }, // SUB L
	{ LD_HL_INTO_WZ, READ, WAIT, SUB_DB_TO_A, FETCH }, // SUB M
	{ SUB_A_TO_A, FETCH }, // SUB A
	{ SBB_B_TO_A, FETCH }, // SBB B
	{ SBB_C_TO_A, FETCH }, // SBB C
	{ SBB_D_TO_A, FETCH }, // SBB D
	{ SBB_E_TO_A, FETCH }, // SBB E
	{ SBB_H_TO_A, FETCH }, // SBB H
	{ SBB_L_TO_A, FETCH }, // SBB L
	{ LD_HL_INTO_WZ, READ, WAIT, SBB_DB_TO_A, FETCH }, // SBB M
	{ SBB_A_TO_A, FETCH }, // SBB A

	// 0xA0 - 0xAF
	{ AND_B, FETCH }, // AND B
	{ AND_C, FETCH }, // AND C
	{ AND_D, FETCH }, // AND D
	{ AND_E, FETCH }, // AND E
	{ AND_H, FETCH }, // AND H
	{ AND_L, FETCH }, // AND L
	{ LD_HL_INTO_WZ, READ, WAIT, AND_DB, FETCH }, // AND M
	{ AND_A, FETCH }, // AND A
	{ XOR_B, FETCH }, // XRA B
	{ XOR_C, FETCH }, // XRA C
	{ XOR_D, FETCH }, // XRA D
	{ XOR_E, FETCH }, // XRA E
	{ XOR_H, FETCH }, // XRA H
	{ XOR_L, FETCH }, // XRA L
	{ LD_HL_INTO_WZ, READ, WAIT, XOR_DB, FETCH }, // XOR M
	{ XOR_A, FETCH }, // XRA A

	// 0xB0 - 0xBF
	{ OR_B, FETCH }, // ORA B
	{ OR_C, FETCH }, // ORA C
	{ OR_D, FETCH }, // ORA D
	{ OR_E, FETCH }, // ORA E
	{ OR_H, FETCH }, // ORA H
	{ OR_L, FETCH }, // ORA L
	{ LD_HL_INTO_WZ, READ, WAIT, OR_DB, FETCH }, // ORA M
	{ OR_A, FETCH }, // ORA A
	{ CP_B, FETCH }, // CMP B
	{ CP_C, FETCH }, // CMP C
	{ CP_D, FETCH }, // CMP D
	{ CP_E, FETCH }, // CMP E
	{ CP_H, FETCH }, // CMP H
	{ CP_L, FETCH }, // CMP L
	{ LD_HL_INTO_WZ, READ, WAIT, CP_DB, FETCH }, // CMP M
	{ CP_A, FETCH }, // CMP A

	// 0xC0 - 0xCF
	{ NOP, STOPZ, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RNZ
	{ NOP, READSP, WAIT, LD_DB_INTO_C, READSP, WAIT, LD_DB_INTO_B, FETCH }, // POP B
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPNZ, FETCH }, // JNZ nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JP, FETCH }, // JMP nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPZ, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CNZ nn
	{ NOP, WRITESP, LD_B_INTO_DB, STOPWRITE, WRITESP, LD_C_INTO_DB, STOPWRITE, NOP, FETCH }, // PUSH B
	{ NOP, READPC, WAIT, ADD_DB_TO_A, FETCH }, // ADI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_0, FETCH }, // RST 0
	{ NOP, STOPNZ, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RZ
	{ NOP, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RET
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPZ, FETCH }, // JZ nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JP, FETCH }, // JMP nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPNZ, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CZ nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CALL nn
	{ NOP, READPC, WAIT, ADC_DB_TO_A, FETCH }, // ACI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_8, FETCH }, // RST 1

	// 0xD0 - 0xDF
	{ NOP, STOPC, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RNC
	{ NOP, READSP, WAIT, LD_DB_INTO_E, READSP, WAIT, LD_DB_INTO_D, FETCH }, // POP D
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPNC, FETCH }, // JNC nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, WRITEIO, LD_A_INTO_DB, STOPWRITE, FETCH }, // OUT d
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPC, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CNC nn
	{ NOP, WRITESP, LD_D_INTO_DB, STOPWRITE, WRITESP, LD_E_INTO_DB, STOPWRITE, NOP, FETCH }, // PUSH D
	{ NOP, READPC, WAIT, SUB_DB_TO_A, FETCH }, // SUI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_10, FETCH }, // RST 2
	{ NOP, STOPNC, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RC
	{ NOP, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RET
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPC, FETCH }, // JC nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READIO, WAIT, LD_DB_INTO_A, FETCH }, // IN d
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPNC, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CC nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CALL nn
	{ NOP, READPC, WAIT, SBB_DB_TO_A, FETCH }, // SBI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_18, FETCH }, // RST 3

	// 0xE0 - 0xEF
	{ NOP, STOPPE, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RPO
	{ NOP, READSP, WAIT, LD_DB_INTO_L, READSP, WAIT, LD_DB_INTO_H, FETCH }, // POP H
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPPO, FETCH }, // JPO nn
	{ NOP, READSP, WAIT, LD_DB_INTO_Z, READSP, WAIT, LD_DB_INTO_W, WRITESP, LD_H_INTO_DB, STOPWRITE, WRITESP, LD_L_INTO_DB, STOPWRITE, LD_WZ_INTO_HL, NOP, FETCH }, // XTHL
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPPE, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CPO nn
	{ NOP, WRITESP, LD_H_INTO_DB, STOPWRITE, WRITESP, LD_L_INTO_DB, STOPWRITE, NOP, FETCH }, // PUSH H
	{ NOP, READPC, WAIT, AND_DB, FETCH }, // ANI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_20, FETCH }, // RST 4
	{ NOP, STOPPO, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RPE
	{ NOP, LD_HL_INTO_PC, FETCH }, // PCHL
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPPE, FETCH }, // JPE nn
	{ EX_DE_HL, FETCH }, // XCHG
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPPO, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CPE nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CALL nn
	{ NOP, READPC, WAIT, XOR_DB, FETCH }, // XRI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_28, FETCH }, // RST 5

	// 0xF0 - 0xFF
	{ NOP, STOPM, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RP
	{ NOP, READSP, WAIT, LD_DB_INTO_F, READSP, WAIT, LD_DB_INTO_A, FETCH }, // POP PSW
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPP, FETCH }, // JP nn
	{ DI, FETCH }, // DI
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPM, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CP nn
	{ NOP, WRITESP, LD_A_INTO_DB, STOPWRITE, WRITESP, LD_F_INTO_DB, STOPWRITE, NOP, FETCH }, // PUSH PSW
	{ NOP, READPC, WAIT, OR_DB, FETCH }, // ORI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_30, FETCH }, // RST 6
	{ NOP, STOPP, READSP, WAIT, LD_DB_INTO_PCL, READSP, WAIT, LD_DB_INTO_PCH, FETCH }, // RM
	{ LD_HL_INTO_WZ, LD_WZ_INTO_SP, FETCH }, // SPHL
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, JPM, FETCH }, // JM nn
	{ EI, FETCH }, // EI
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, STOPP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CM nn
	{ NOP, READPC, WAIT, LD_DB_INTO_Z, READPC, WAIT, LD_DB_INTO_W, NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, JP_WZ, FETCH }, // CALL nn
	{ NOP, READPC, WAIT, CP_DB, FETCH }, // CPI n
	{ NOP, WRITESP, LD_PCH_INTO_DB, STOPWRITE, WRITESP, LD_PCL_INTO_DB, STOPWRITE, JP_38, FETCH }, // RST 7
};
